// Generated by CoffeeScript 1.6.3
var Article, DBCreator, Model, assert, dbCreator, migration, should, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

assert = require("assert");

Model = require("" + __dirname + "/../app/models/model");

DBCreator = require("" + __dirname + "/../db/db");

should = require('should');

dbCreator = new DBCreator('test', true, false);

migration = {
  action: 'createTable',
  tableName: 'articles',
  fields: [
    {
      name: "author_id",
      type: "integer"
    }, {
      name: "title",
      type: "string"
    }, {
      name: "body",
      type: "text"
    }
  ]
};

Article = (function(_super) {
  __extends(Article, _super);

  function Article() {
    _ref = Article.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  Article.className = 'Article';

  return Article;

})(Model);

describe('Model', function() {
  var article;
  article = null;
  beforeEach(function(done) {
    return dbCreator.executeMigration(migration, function() {
      article = new Article();
      return Article.fields(function() {
        return done();
      });
    });
  });
  return describe('classMethods', function() {
    return describe('#tableName', function() {
      it('should return the pluralized class name in lowercase', function() {
        assert.equal("Article", Article.className);
        return assert.equal("articles", Article.tableName());
      });
      return it('should have fields from migration', function() {
        var fields;
        return fields = migration.fields.map(function(field) {
          return Article.fields().should.include(field.name);
        });
      });
    });
  });
});
