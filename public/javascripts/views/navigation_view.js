// Generated by CoffeeScript 1.6.3
var _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

namespace('views');

tt.views.NavigationView = (function(_super) {
  __extends(NavigationView, _super);

  function NavigationView() {
    _ref = NavigationView.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  NavigationView.prototype.template = _.template($('#navigation_item_template').html());

  NavigationView.prototype.tagName = 'li';

  NavigationView.prototype.model = tt.models.Navigation;

  NavigationView.prototype.initialize = function(options) {
    if (options == null) {
      options = {};
    }
    NavigationView.__super__.initialize.call(this, options);
    if (options) {
      this.router = options.router;
    }
    _.bindAll(this, 'changeActive');
    if (options.model != null) {
      return this.model.on('change:active', this.changeActive);
    }
  };

  NavigationView.prototype.changeActive = function(model) {
    if (model.get("active") === true) {
      return this.$el.addClass("active");
    } else {
      return this.$el.removeClass("active");
    }
  };

  NavigationView.prototype.render = function() {
    this.$el.html(this.template(this.model.toJSON()));
    return this;
  };

  return NavigationView;

})(tt.views.MainView);
