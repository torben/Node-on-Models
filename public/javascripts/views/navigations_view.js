// Generated by CoffeeScript 1.6.3
var _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

namespace('views');

tt.views.NavigationsView = (function(_super) {
  __extends(NavigationsView, _super);

  function NavigationsView() {
    _ref = NavigationsView.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  NavigationsView.prototype.lastClassName = null;

  NavigationsView.prototype.tagName = 'div';

  NavigationsView.prototype.className = 'container';

  NavigationsView.prototype.collection = tt.collections.Navigations;

  NavigationsView.prototype.template = _.template($('#navigation_template').html());

  NavigationsView.prototype.views = [];

  NavigationsView.prototype.model = null;

  NavigationsView.prototype.events = {
    'click .nav-toggle': 'toggleNavigation',
    'click .links a': 'closeNavigation'
  };

  NavigationsView.prototype.initialize = function(options) {
    NavigationsView.__super__.initialize.call(this, options);
    _.bindAll(this, 'addAll', 'addOne');
    this.router = options.router;
    this.collection.on('reset', this.addAll);
    this.collection.on('add', this.addOne);
    return this.model = new tt.models.MainModel;
  };

  NavigationsView.prototype.closeNavigation = function(e) {
    if (this.$('.links').hasClass('fadeIn')) {
      return this.$('.links').removeClass('fadeIn').addClass('fadeOut');
    }
  };

  NavigationsView.prototype.toggleNavigation = function(e) {
    this.$('.links').show();
    if (this.$('.links').hasClass('fadeIn')) {
      return this.closeNavigation(e);
    } else {
      return this.$('.links').removeClass('fadeOut').addClass('fadeIn');
    }
  };

  NavigationsView.prototype.setCurrentClass = function(className) {
    if (this.lastClassName != null) {
      this.$el.removeClass(this.lastClassName);
    }
    this.lastClassName = className;
    return this.$el.addClass(className);
  };

  NavigationsView.prototype.addAll = function() {
    return this.collection.each(this.addOne);
  };

  NavigationsView.prototype.addOne = function(model) {
    var view;
    if (model.get("active") === 0 || model.get("position") === 0 || (model.get("position") == null)) {
      return;
    }
    view = new tt.views.NavigationView({
      model: model,
      router: this.router
    });
    if (this.views.indexOf(view) === -1) {
      this.views.push(view);
    }
    this.$(".links").append(view.render().el);
    if (this.$el.find("ul.links li").length === 1) {
      return view.$el.addClass("first");
    }
  };

  NavigationsView.prototype.setActive = function(id) {
    var view, _i, _len, _ref1, _results;
    _ref1 = this.views;
    _results = [];
    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
      view = _ref1[_i];
      _results.push(view.model.set("active", view.model.get("id") === id));
    }
    return _results;
  };

  NavigationsView.prototype.render = function() {
    this.$el.html(this.template());
    return this;
  };

  return NavigationsView;

})(tt.views.MainView);
